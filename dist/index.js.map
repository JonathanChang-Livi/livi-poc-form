{"version":3,"file":"index.js","sources":["../src/index.tsx"],"sourcesContent":["import * as React from 'react'\n\nexport type FormLabelElement = JSX.Element\nexport type FormErrorElement = JSX.Element\nexport type FormElement = JSX.Element\nexport type FormGroupElement = JSX.Element\nexport type FormGroupChildElement = FormElement | FormLabelElement | FormErrorElement\nexport type FormChildElement = FormElement | FormGroupElement | React.ReactNode\n\nexport interface ComponentProps {\n  className?: string\n  override?: boolean\n  style?: React.CSSProperties\n}\n\nexport interface FormProps {\n  placeholder?: string\n  defaultValue?: any\n  id: string\n}\n\nexport interface ValidationProps {\n  validate: (v: any) => boolean\n  errorMsg?: string\n}\n\nexport interface FormContainerProps {\n  action?: string\n  method?: 'post' | 'get'\n  children: FormChildElement | FormChildElement[]\n}\n\nexport const Form = ({ action, method, children }: FormContainerProps) => {\n  return (\n    <form action={action} method={method}>\n      {children}\n    </form>\n  )\n}\n\nexport interface FormGroupProps {\n  children: FormGroupChildElement | FormGroupChildElement[]\n  row?: boolean\n}\n\nexport const FormGroup = ({ children, row, className, override, style }: FormGroupProps & ComponentProps): FormGroupElement => {\n  const fgClass = `flex ${row && row ? 'flex-row' : 'flex-col'} gap-2`\n  return (\n    <div className={`${override && override ? '' : fgClass} ${className || ''}`} style={style}>\n      {children}\n    </div>\n  )\n}\n\nexport interface InputProps {\n  type: 'text' | 'number' | 'email' | 'password'\n}\nexport const Input = ({ type, className, override, style, placeholder, defaultValue, id }: InputProps & ComponentProps & FormProps & ValidationProps): FormElement => {\n  const textClass = `border-primary border rounded-lg p-3`\n  return (\n    <input className={`${override && override ? '' : textClass} ${className || ''}`} style={style}\n      placeholder={placeholder} id={id} name={id} value={defaultValue} type={type}></input>\n  )\n}\n\nexport interface LabelProps {\n  children?: string\n  value?: string\n  target?: string\n}\nexport const Label = ({ children, value, target, className, override, style}: LabelProps & ComponentProps): FormLabelElement => {\n  const labelClass = `font-semibold text-sm`\n  return (\n    <label htmlFor={target} className={`${override && override ? '' : labelClass} ${className || ''}`} style={style}>{children || value || ''}</label>\n  )\n}\n"],"names":["Form","action","method","children","React","FormGroup","row","className","override","style","fgClass","Input","type","placeholder","defaultValue","id","textClass","name","value","Label","target","labelClass","htmlFor"],"mappings":";;IAgCaA,IAAI,GAAG,SAAPA,IAAI;MAAMC,MAAM,QAANA,MAAM;IAAEC,MAAM,QAANA,MAAM;IAAEC,QAAQ,QAARA,QAAQ;EAC7C,OACEC;IAAMH,MAAM,EAAEA,MAAM;IAAEC,MAAM,EAAEA;KAC3BC,QAAQ,CACJ;AAEX;IAOaE,SAAS,GAAG,SAAZA,SAAS;MAAMF,QAAQ,SAARA,QAAQ;IAAEG,GAAG,SAAHA,GAAG;IAAEC,SAAS,SAATA,SAAS;IAAEC,QAAQ,SAARA,QAAQ;IAAEC,KAAK,SAALA,KAAK;EACnE,IAAMC,OAAO,cAAWJ,GAAG,IAAIA,GAAG,GAAG,UAAU,GAAG,UAAU,YAAQ;EACpE,OACEF;IAAKG,SAAS,GAAKC,QAAQ,IAAIA,QAAQ,GAAG,EAAE,GAAGE,OAAO,WAAIH,SAAS,IAAI,EAAE,CAAE;IAAEE,KAAK,EAAEA;KACjFN,QAAQ,CACL;AAEV;IAKaQ,KAAK,GAAG,SAARA,KAAK;MAAMC,IAAI,SAAJA,IAAI;IAAEL,SAAS,SAATA,SAAS;IAAEC,QAAQ,SAARA,QAAQ;IAAEC,KAAK,SAALA,KAAK;IAAEI,WAAW,SAAXA,WAAW;IAAEC,YAAY,SAAZA,YAAY;IAAEC,EAAE,SAAFA,EAAE;EACrF,IAAMC,SAAS,yCAAyC;EACxD,OACEZ;IAAOG,SAAS,GAAKC,QAAQ,IAAIA,QAAQ,GAAG,EAAE,GAAGQ,SAAS,WAAIT,SAAS,IAAI,EAAE,CAAE;IAAEE,KAAK,EAAEA,KAAK;IAC3FI,WAAW,EAAEA,WAAW;IAAEE,EAAE,EAAEA,EAAE;IAAEE,IAAI,EAAEF,EAAE;IAAEG,KAAK,EAAEJ,YAAY;IAAEF,IAAI,EAAEA;IAAc;AAE3F;IAOaO,KAAK,GAAG,SAARA,KAAK;MAAMhB,QAAQ,SAARA,QAAQ;IAAEe,KAAK,SAALA,KAAK;IAAEE,MAAM,SAANA,MAAM;IAAEb,SAAS,SAATA,SAAS;IAAEC,QAAQ,SAARA,QAAQ;IAAEC,KAAK,SAALA,KAAK;EACzE,IAAMY,UAAU,0BAA0B;EAC1C,OACEjB;IAAOkB,OAAO,EAAEF,MAAM;IAAEb,SAAS,GAAKC,QAAQ,IAAIA,QAAQ,GAAG,EAAE,GAAGa,UAAU,WAAId,SAAS,IAAI,EAAE,CAAE;IAAEE,KAAK,EAAEA;KAAQN,QAAQ,IAAIe,KAAK,IAAI,EAAE,CAAS;AAEtJ;;;;;;;"}